plugins {
    id 'com.android.application'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.aci"
        minSdk 29
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'com.github.chivorns:smartmaterialspinner:1.5.0'
    implementation 'com.github.chivorns:smartmaterialspinner:1.5.0'
    implementation group: 'org.apache.poi', name: 'poi-ooxml', version: '4.1.2'
    implementation 'javax.xml.stream:stax-api:1.0'
    implementation 'com.itextpdf:itextg:5.5.10'




    def room_version = "2.3.0"

    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    // For Kotlin, you can use kapt instead of annotationProcessor

    // Optional: add Room's Kotlin extensions for LiveData and RxJava
    implementation "androidx.room:room-ktx:$room_version"
}